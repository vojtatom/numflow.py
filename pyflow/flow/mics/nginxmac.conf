#user  www;
worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /usr/local/etc/nginx/mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    ##DJANGO
        client_max_body_size 2000M;

        upstream django_server {
            server unix:/Users/vojtatom/Documents/work.nosync/flow/flow/run/gunicorn.sock fail_timeout=10s;
        }

        server {
            listen 80 default_server;
            server_name 0.0.0.0 127.0.0.1 localhost;
            #access_log  /var/log/nginx/access.log;

            location /static {
                autoindex on;
                alias /Users/vojtatom/Documents/work.nosync/flow/flow/static/static_server/;
            }
            location /media {
                autoindex on;
                alias /Users/vojtatom/Documents/work.nosync/flow/flow/media.nosync/;
            }

            #location / {
            #    proxy_pass http://127.0.0.1:8000;
            #    proxy_set_header Host $host;
            #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #}

            location / {
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_redirect off;

                if (!-f $request_filename) {
                    proxy_pass http://django_server;
                    #proxy_pass django_server;
                    break;
                }
            }
        }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*;
}
